{
  "components": {
    "ui": {
      "ModusAccordion": {
        "description": "Expandable accordion component for organizing content in collapsible sections",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The accordion's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Disables the accordion item",
            "default": "undefined"
          },
          {
            "name": "expand-button-type",
            "type": "string",
            "description": "The type of expand button",
            "options": ["standardArrow", "circleArrow"],
            "default": "standardArrow"
          },
          {
            "name": "expanded",
            "type": "boolean",
            "description": "The expanded state of the accordion item",
            "default": "undefined"
          },
          {
            "name": "headerText",
            "type": "string",
            "description": "The text to render in the accordion item header",
            "default": "undefined"
          },
          {
            "name": "icon",
            "type": "string",
            "description": "Takes the icon name and renders the icon",
            "default": "undefined"
          },
          {
            "name": "supporting-label",
            "type": "string",
            "description": "The supportingLabel of the accordion",
            "default": "undefined"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of the accordion item",
            "options": ["condensed", "standard"],
            "default": "standard"
          }
        ],
        "events": [
          {
            "name": "closed",
            "description": "Fires on accordion item collapse",
            "emits": "void"
          },
          {
            "name": "opened",
            "description": "Fires on accordion item expand",
            "emits": "void"
          }
        ],
        "componentName": "ModusAccordion"
      },
      "ModusAlert": {
        "description": "Alert component for displaying messages and notifications",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The alert's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "buttonAriaLabel",
            "type": "string",
            "description": "The button's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "buttonText",
            "type": "string",
            "description": "The button's text",
            "default": "undefined"
          },
          {
            "name": "dismissible",
            "type": "boolean",
            "description": "Whether the alert is dismissible, renders the close icon",
            "default": "undefined"
          },
          {
            "name": "message",
            "type": "string",
            "description": "The alert message",
            "default": "undefined"
          },
          {
            "name": "type",
            "type": "string",
            "description": "The type of the alert",
            "options": ["error", "info", "success", "warning"],
            "default": "info"
          }
        ],
        "events": [
          {
            "name": "dismissClick",
            "description": "Fires on dismiss icon click",
            "emits": "void"
          },
          {
            "name": "actionClick",
            "description": "Fires on action button click",
            "emits": "void"
          }
        ],
        "componentName": "ModusAlert"
      },
      "ModusBadge": {
        "description": "Badge component for displaying status indicators or counters",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The badge's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "color",
            "type": "string",
            "description": "The color of the badge",
            "options": ["danger", "dark", "primary", "secondary", "success", "tertiary", "warning"],
            "default": "primary"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of the badge",
            "options": ["small", "medium", "large"],
            "default": "medium"
          },
          {
            "name": "type",
            "type": "string",
            "description": "The type of the badge",
            "options": ["counter", "default", "text"],
            "default": "default"
          }
        ],
        "componentName": "ModusBadge"
      },
      "ModusBreadcrumb": {
        "description": "Breadcrumb navigation component for displaying hierarchical page structure",
        "interfaces": [
          {
            "name": "Crumb",
            "properties": [
              {
                "name": "id",
                "type": "string",
                "description": "Unique identifier for the crumb",
                "required": true
              },
              {
                "name": "display",
                "type": "string",
                "description": "Display text for the crumb",
                "required": true
              }
            ]
          }
        ],
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The breadcrumb's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "crumbs",
            "type": "Crumb[]",
            "description": "The breadcrumbs to render",
            "default": "[]",
            "required": true
          },
          {
            "name": "underlineLinks",
            "type": "boolean",
            "description": "A flag that controls the display of underline",
            "default": "false"
          }
        ],
        "events": [
          {
            "name": "crumbClick",
            "description": "Fires on breadcrumb click",
            "emits": "Crumb"
          }
        ],
        "componentName": "ModusBreadcrumb"
      },
      "ModusButtonGroup": {
        "description": "Button group component for organizing related buttons",
        "interfaces": [
          {
            "name": "ButtonGroupSelectionType",
            "type": "string",
            "options": ["single", "multiple", "none"]
          },
          {
            "name": "ModusButtonGroupButtonClickEvent",
            "properties": [
              {
                "name": "button",
                "type": "HTMLModusButtonElement",
                "description": "The button that was clicked"
              },
              {
                "name": "isSelected",
                "type": "boolean",
                "description": "Whether the button is selected"
              }
            ]
          }
        ],
        "properties": [
          {
            "name": "ariaDisabled",
            "type": "string",
            "description": "The button groups's aria-disabled state",
            "default": "undefined"
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The button groups's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "buttonStyle",
            "type": "string",
            "description": "The style of the buttons in group",
            "options": ["borderless", "fill", "outline"],
            "default": "outline"
          },
          {
            "name": "color",
            "type": "string",
            "description": "The color of the buttons in group",
            "options": ["danger", "primary", "secondary", "tertiary"],
            "default": "primary"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "If true, the button group is disabled",
            "default": "false"
          },
          {
            "name": "selected",
            "type": "HTMLModusButtonElement",
            "description": "The default selected button in the group",
            "default": "undefined"
          },
          {
            "name": "selectionType",
            "type": "ButtonGroupSelectionType",
            "description": "The selection type (none, single, multiple)",
            "options": ["none", "single", "multiple"],
            "default": "none"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of the buttons",
            "options": ["small", "medium", "large"],
            "default": "medium"
          }
        ],
        "events": [
          {
            "name": "buttonClick",
            "description": "An event that fires on button click",
            "emits": "ModusButtonGroupButtonClickEvent"
          },
          {
            "name": "selectionChange",
            "description": "An event that fires when selection type is single or multiple on button click that provides the list of selected buttons",
            "emits": "HTMLModusButtonElement[]"
          }
        ],
        "componentName": "ModusButtonGroup"
      },
      "ModusButton": {
        "description": "Button component with various styles and customization options",
        "properties": [
          {
            "name": "ariaDisabled",
            "type": "string",
            "description": "The button's aria-disabled state",
            "default": "undefined"
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The button's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "buttonStyle",
            "type": "string",
            "description": "The style of the button",
            "options": ["borderless", "fill", "outline"],
            "default": "fill"
          },
          {
            "name": "color",
            "type": "string",
            "description": "The color of the button",
            "options": ["danger", "primary", "secondary", "tertiary", "special"],
            "default": "primary"
          },
          {
            "name": "criticalAction",
            "type": "boolean",
            "description": "Enable progress animation for danger button",
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Disables the button",
            "default": "undefined"
          },
          {
            "name": "iconOnly",
            "type": "string",
            "description": "Takes the icon name and renders an iconOnly button",
            "default": "undefined"
          },
          {
            "name": "leftIcon",
            "type": "string",
            "description": "Takes the icon name and shows the icon aligned to the left of the button text",
            "default": "undefined"
          },
          {
            "name": "rightIcon",
            "type": "string",
            "description": "Takes the icon name and shows the icon aligned to the right of the button text",
            "default": "undefined"
          },
          {
            "name": "showCaret",
            "type": "boolean",
            "description": "Shows a caret icon right side of the button",
            "default": "undefined"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of the button",
            "options": ["large", "medium", "small"],
            "default": "medium"
          },
          {
            "name": "type",
            "type": "string",
            "description": "The type of the button",
            "options": ["button", "reset", "submit"],
            "default": "button"
          }
        ],
        "events": [
          {
            "name": "buttonClick",
            "description": "An event that fires on button click",
            "emits": "any"
          }
        ],
        "methods": [
          {
            "name": "focusButton",
            "description": "Focus the Button",
            "returns": "Promise<void>"
          }
        ],
        "componentName": "ModusButton"
      },
      "ModusCard": {
        "description": "Card component for displaying content in a contained area",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The card's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "borderRadius",
            "type": "string",
            "description": "The border radius of the card",
            "default": "4px"
          },
          {
            "name": "height",
            "type": "string",
            "description": "The height of the card",
            "default": "269px"
          },
          {
            "name": "showCardBorder",
            "type": "boolean",
            "description": "A flag that controls the display of border",
            "default": "true"
          },
          {
            "name": "showShadowOnHover",
            "type": "boolean",
            "description": "A flag that controls the display of shadow box when the element is hovered",
            "default": "true"
          },
          {
            "name": "width",
            "type": "string",
            "description": "The width of the card",
            "default": "240px"
          }
        ],
        "componentName": "ModusCard"
      },
      "ModusChip": {
        "description": "Chip component for displaying compact information or actions",
        "properties": [
          {
            "name": "active",
            "type": "boolean",
            "description": "Whether the chip is active",
            "default": "false"
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The chip's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "chipStyle",
            "type": "string",
            "description": "The chip's style",
            "options": ["outline", "solid"],
            "default": "solid"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the chip is disabled",
            "default": "false"
          },
          {
            "name": "hasError",
            "type": "boolean",
            "description": "Whether the chip has an error",
            "default": "false"
          },
          {
            "name": "imageUrl",
            "type": "string",
            "description": "The chip's image url",
            "default": "undefined"
          },
          {
            "name": "showCheckmark",
            "type": "boolean",
            "description": "Whether to show the checkmark",
            "default": "false"
          },
          {
            "name": "showClose",
            "type": "boolean",
            "description": "Whether to show the close icon",
            "default": "false"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The chip's size",
            "options": ["medium", "small"],
            "default": "medium"
          },
          {
            "name": "advanced-chip",
            "type": "boolean",
            "description": "Whether the chip is in advanced state",
            "default": "false"
          },
          {
            "name": "value",
            "type": "string",
            "description": "The chip's value",
            "default": "undefined"
          },
          {
            "name": "maxWidth",
            "type": "string",
            "description": "Maximum width for the Chip's text and shows ellipsis when truncated",
            "default": "undefined"
          },
          {
            "name": "chipId",
            "type": "string",
            "description": "This chip's id will create much more visibility for testing",
            "default": "undefined"
          }
        ],
        "events": [
          {
            "name": "chipClick",
            "description": "Fires on chip click",
            "emits": "KeyboardEvent | MouseEvent"
          },
          {
            "name": "closeClick",
            "description": "Fires on close icon click",
            "emits": "KeyboardEvent | MouseEvent"
          }
        ],
        "componentName": "ModusChip"
      },
      "ModusTreeView": {
        "description": "Tree view component for displaying hierarchical data",
        "interfaces": [
          {
            "name": "ModusActionBarOptions",
            "properties": [
              {
                "name": "id",
                "type": "string",
                "description": "Unique identifier for the action"
              },
              {
                "name": "icon",
                "type": "string",
                "description": "Icon name for the action"
              },
              {
                "name": "label",
                "type": "string",
                "description": "Label text for the action"
              }
            ]
          }
        ],
        "properties": [
          {
            "name": "borderless",
            "type": "boolean",
            "description": "Whether the content tree and items have a border or not",
            "default": "undefined"
          },
          {
            "name": "enableReordering",
            "type": "boolean",
            "description": "Sets draggable state to be true to all the children",
            "default": "undefined"
          },
          {
            "name": "checkboxSelection",
            "type": "boolean",
            "description": "Enables checkbox selection on each tree item",
            "default": "undefined"
          },
          {
            "name": "checkedItems",
            "type": "string[]",
            "description": "Set checked tree items",
            "default": "[]"
          },
          {
            "name": "disableTabbing",
            "type": "boolean",
            "description": "Disable usage of Tab key to focus elements inside a tree view. Use Arrow Up/Down for focussing a tree item and Shift + Arrow Right for focussing a checkbox inside the item",
            "default": "undefined"
          },
          {
            "name": "expandedItems",
            "type": "string[]",
            "description": "Set expanded tree items",
            "default": "[]"
          },
          {
            "name": "multiCheckboxSelection",
            "type": "boolean",
            "description": "Enables multiple checkbox selection",
            "default": "undefined"
          },
          {
            "name": "multiSelection",
            "type": "boolean",
            "description": "Enables multiple tree items selection",
            "default": "undefined"
          },
          {
            "name": "selectedItems",
            "type": "string[]",
            "description": "Set selected tree items",
            "default": "[]"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The default size of all tree items",
            "options": ["condensed", "large", "standard"],
            "default": "standard"
          }
        ],
        "events": [
          {
            "name": "itemActionClick",
            "description": "Fired when an action is clicked within any tree item. Includes both the actionId and nodeId of the action and item, respectively",
            "emits": "{ actionId: string, nodeId: string }"
          },
          {
            "name": "itemDrop",
            "description": "Fired when an item is dropped in a different position. Includes the updated item's map",
            "emits": "{ [key: string]: TreeViewItemInfo }"
          },
          {
            "name": "itemSelectionChange",
            "description": "Fired when the item's selection state changes by any means, such as mouse or keyboard interactions",
            "emits": "CustomEvent<{isSelected: boolean, nodeId: number}>"
          }
        ],
        "componentName": "ModusTreeView"
      },
      "ModusTreeViewItem": {
        "description": "Individual item component within the tree view",
        "properties": [
          {
            "name": "actions",
            "type": "ModusActionBarOptions",
            "description": "Actions that can be performed on each item. A maximum of 3 icons will be shown, including overflow menu and expand icons",
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Disables the tree item",
            "default": "undefined"
          },
          {
            "name": "draggableItem",
            "type": "boolean",
            "description": "Allows the item to be dragged across the tree",
            "default": "undefined"
          },
          {
            "name": "droppableItem",
            "type": "boolean",
            "description": "Allows the item to be a drop zone so other tree items can be dropped above it",
            "default": "undefined"
          },
          {
            "name": "editable",
            "type": "boolean",
            "description": "Changes the label field into a text box",
            "default": "undefined"
          },
          {
            "name": "label",
            "type": "string",
            "description": "Label for the tree item",
            "default": "undefined",
            "required": true
          },
          {
            "name": "nodeId",
            "type": "string",
            "description": "Unique tree item identifier",
            "default": "undefined",
            "required": true
          },
          {
            "name": "tabIndexValue",
            "type": "number | string",
            "description": "Tab Index for the tree item",
            "default": "0"
          },
          {
            "name": "isLastChild",
            "type": "boolean",
            "description": "To be set true when the tree item is an expandable last child",
            "default": "false"
          }
        ],
        "events": [
          {
            "name": "actionClick",
            "description": "Fired when an action button within the tree item is clicked. Includes the actionId",
            "emits": "{ actionId: string }"
          },
          {
            "name": "checkboxClick",
            "description": "An event that fires on tree item checkbox click",
            "emits": "boolean"
          },
          {
            "name": "itemClick",
            "description": "An event that fires on tree item click",
            "emits": "boolean"
          },
          {
            "name": "itemExpandToggle",
            "description": "An event that fires on tree item expand/collapse",
            "emits": "boolean"
          },
          {
            "name": "itemLabelChange",
            "description": "An event that fires on tree item label change",
            "emits": "CustomEvent<string>"
          }
        ],
        "methods": [
          {
            "name": "focusCheckbox",
            "description": "Focus the checkbox inside a tree item",
            "returns": "Promise<void>"
          },
          {
            "name": "focusItem",
            "description": "Focus the tree item",
            "returns": "Promise<void>"
          }
        ],
        "componentName": "ModusTreeViewItem"
      },
      "ModusDataTable": {
        "description": "Data table component for displaying and managing tabular data",
        "interfaces": [
          {
            "name": "TCell",
            "type": "number | string | boolean | ModusDataTableCellBadge | ModusDataTableCellLink"
          },
          {
            "name": "TRow",
            "properties": [
              {
                "name": "_id",
                "type": "string",
                "description": "Optional row identifier",
                "optional": true
              },
              {
                "name": "_selected",
                "type": "boolean",
                "description": "Optional row selection state",
                "optional": true
              },
              {
                "name": "[key: string]",
                "type": "TCell",
                "description": "Dynamic cell values"
              }
            ]
          },
          {
            "name": "TColumn",
            "properties": [
              {
                "name": "align",
                "type": "string",
                "description": "Text alignment for the column",
                "options": ["left", "right"],
                "optional": true
              },
              {
                "name": "display",
                "type": "string",
                "description": "Display text for the column"
              },
              {
                "name": "id",
                "type": "string",
                "description": "Column identifier",
                "optional": true
              },
              {
                "name": "readonly",
                "type": "boolean",
                "description": "Whether the column is read-only",
                "optional": true
              },
              {
                "name": "width",
                "type": "string",
                "description": "Column width",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusDataTableCellBadge",
            "properties": [
              {
                "name": "_type",
                "type": "string",
                "description": "Used internally to identify the type of cell",
                "default": "badge"
              },
              {
                "name": "color",
                "type": "string",
                "description": "Badge color",
                "options": ["danger", "dark", "primary", "secondary", "success", "tertiary", "warning"],
                "optional": true
              },
              {
                "name": "text",
                "type": "string",
                "description": "Badge text"
              },
              {
                "name": "type",
                "type": "string",
                "description": "Badge type",
                "options": ["counter", "default", "text"],
                "optional": true
              }
            ]
          },
          {
            "name": "ModusDataTableCellLink",
            "properties": [
              {
                "name": "_type",
                "type": "string",
                "description": "Used internally to identify the type of cell",
                "default": "link"
              },
              {
                "name": "display",
                "type": "string",
                "description": "Link display text"
              },
              {
                "name": "url",
                "type": "string",
                "description": "Link URL"
              }
            ]
          },
          {
            "name": "ModusDataTableSort",
            "properties": [
              {
                "name": "columnId",
                "type": "string",
                "description": "ID of the sorted column"
              },
              {
                "name": "direction",
                "type": "string",
                "description": "Sort direction",
                "options": ["asc", "desc", "none"]
              }
            ]
          },
          {
            "name": "ModusDataTableDisplayOptions",
            "properties": [
              {
                "name": "animateRowActionsDropdown",
                "type": "boolean",
                "description": "Whether to animate the row actions dropdown",
                "default": "false",
                "optional": true
              },
              {
                "name": "borderless",
                "type": "boolean",
                "description": "Whether the table is borderless",
                "default": "true",
                "optional": true
              },
              {
                "name": "cellBorderless",
                "type": "boolean",
                "description": "Whether cells are borderless",
                "default": "true",
                "optional": true
              },
              {
                "name": "rowStripe",
                "type": "boolean",
                "description": "Whether to show alternating row colors",
                "default": "false",
                "optional": true
              },
              {
                "name": "size",
                "type": "string",
                "description": "Table size",
                "options": ["small", "large"],
                "default": "large",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusDataTableRowAction",
            "properties": [
              {
                "name": "_id",
                "type": "string",
                "description": "Action identifier"
              },
              {
                "name": "display",
                "type": "object",
                "properties": [
                  {
                    "name": "icon",
                    "type": "string",
                    "description": "Action icon",
                    "optional": true
                  },
                  {
                    "name": "text",
                    "type": "string",
                    "description": "Action text"
                  }
                ]
              }
            ]
          },
          {
            "name": "ModusDataTableSelectionOptions",
            "properties": [
              {
                "name": "canSelect",
                "type": "boolean",
                "description": "Whether rows can be selected",
                "default": "false"
              },
              {
                "name": "checkboxSelection",
                "type": "boolean",
                "description": "Whether to show checkboxes for selection",
                "default": "false"
              }
            ]
          },
          {
            "name": "ModusDataTableSortOptions",
            "properties": [
              {
                "name": "canSort",
                "type": "boolean",
                "description": "Whether columns can be sorted",
                "default": "false"
              },
              {
                "name": "serverSide",
                "type": "boolean",
                "description": "Whether sorting is handled server-side",
                "default": "false"
              }
            ]
          }
        ],
        "properties": [
          {
            "name": "columns",
            "type": "TColumn[] | string[]",
            "description": "Column definitions for the data table",
            "default": "undefined",
            "required": true
          },
          {
            "name": "data",
            "type": "TCell[][] | TRow[]",
            "description": "Data to display in the table",
            "default": "undefined",
            "required": true
          },
          {
            "name": "displayOptions",
            "type": "ModusDataTableDisplayOptions",
            "description": "Options for data table display",
            "default": "{ animateRowActionsDropdown: false, borderless: true, cellBorderless: true, rowStripe: false, size: 'large' }"
          },
          {
            "name": "rowActions",
            "type": "ModusDataTableRowAction[]",
            "description": "Actions that can be performed on each row",
            "default": "[]"
          },
          {
            "name": "selectionOptions",
            "type": "ModusDataTableSelectionOptions",
            "description": "Options for data table item selection",
            "default": "{ canSelect: false, checkboxSelection: false }"
          },
          {
            "name": "sortOptions",
            "type": "ModusDataTableSortOptions",
            "description": "Options for data table column sort",
            "default": "{ canSort: false, serverSide: false }"
          }
        ],
        "events": [
          {
            "name": "cellLinkClick",
            "description": "An event that fires on cell link click",
            "emits": "ModusDataTableCellLink"
          },
          {
            "name": "rowActionClick",
            "description": "An event that fires when a row action is clicked",
            "emits": "{ actionId: string; rowId: string; }"
          },
          {
            "name": "rowDoubleClick",
            "description": "An event that fires on row double click",
            "emits": "string"
          },
          {
            "name": "selection",
            "description": "An event that fires on selection change",
            "emits": "string[]"
          },
          {
            "name": "sort",
            "description": "An event that fires on column sort",
            "emits": "ModusDataTableSortEvent"
          }
        ],
        "componentName": "ModusDataTable"
      },
      "ModusDropdown": {
        "description": "Dropdown component for displaying a list of options",
        "properties": [
          {
            "name": "animateList",
            "type": "boolean",
            "description": "Whether to apply list opening animation",
            "default": "false"
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "(optional) The dropdown's ariaLabel. (Not recommended)",
            "default": "undefined"
          },
          {
            "name": "borderRadius",
            "type": "string",
            "description": "The border radius of the dropdown list",
            "default": "0"
          },
          {
            "name": "customPlacement",
            "type": "object",
            "description": "Determines custom dropdown placement offset",
            "properties": [
              {
                "name": "top",
                "type": "number",
                "optional": true
              },
              {
                "name": "right",
                "type": "number",
                "optional": true
              },
              {
                "name": "bottom",
                "type": "number",
                "optional": true
              },
              {
                "name": "left",
                "type": "number",
                "optional": true
              }
            ],
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Disables the dropdown",
            "default": "undefined"
          },
          {
            "name": "disableCloseOnSelect",
            "type": "boolean",
            "description": "Prevents the dropdown from closing when an option is selected",
            "default": "false"
          },
          {
            "name": "placement",
            "type": "string",
            "description": "The placement of the dropdown in related to the toggleElement",
            "options": ["bottom", "left", "right", "top"],
            "default": "bottom"
          },
          {
            "name": "showDropdownListBorder",
            "type": "boolean",
            "description": "Whether to show the dropdown list's border",
            "default": "true"
          },
          {
            "name": "toggleElementId",
            "type": "string",
            "description": "The element id that the list renders near and that triggers the toggling of the list",
            "default": "undefined",
            "required": true
          }
        ],
        "events": [
          {
            "name": "dropdownClose",
            "description": "An event that fires on dropdown close",
            "emits": "any"
          }
        ],
        "componentName": "ModusDropdown"
      },
      "ModusFileDropzone": {
        "description": "File dropzone component for file upload functionality",
        "properties": [
          {
            "name": "acceptfiletypes",
            "type": "string",
            "description": "The dropzone's accepted file types",
            "default": "undefined"
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The dropzone's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Disables the dropzone",
            "default": "undefined"
          },
          {
            "name": "description",
            "type": "string",
            "description": "The dropzone's description text",
            "default": "undefined"
          },
          {
            "name": "dropzoneHeight",
            "type": "string",
            "description": "The dropzone's height",
            "default": "undefined"
          },
          {
            "name": "dropzoneWidth",
            "type": "string",
            "description": "The dropzone's width",
            "default": "undefined"
          },
          {
            "name": "fileDraggedOverInstructions",
            "type": "string",
            "description": "The dropzone's instruction text when a file is being dragged over",
            "default": "Drag files here."
          },
          {
            "name": "includeStateIcon",
            "type": "boolean",
            "description": "Whether to include the upload icon",
            "default": "true"
          },
          {
            "name": "instructions",
            "type": "string",
            "description": "The dropzone's instruction text",
            "default": "Drag files here or browse to upload."
          },
          {
            "name": "label",
            "type": "string",
            "description": "The dropzone's label text",
            "default": "undefined"
          },
          {
            "name": "maxFileCount",
            "type": "number",
            "description": "The dropzone's max file count",
            "default": "undefined"
          },
          {
            "name": "maxFileNameLength",
            "type": "number",
            "description": "The dropzone's max file name length of each file",
            "default": "undefined"
          },
          {
            "name": "maxTotalFileSizeBytes",
            "type": "number",
            "description": "The dropzone's max total file size",
            "default": "undefined"
          },
          {
            "name": "multiple",
            "type": "boolean",
            "description": "Whether multiple files can be uploaded",
            "default": "true"
          }
        ],
        "events": [
          {
            "name": "files",
            "description": "An event that fires when files have been added or removed, regardless of whether they're valid. Returns the files and current error",
            "emits": "[File[], string]"
          }
        ],
        "methods": [
          {
            "name": "addFile",
            "description": "Add a file to the dropzone",
            "parameters": [
              {
                "name": "file",
                "type": "File"
              }
            ],
            "returns": "Promise<void>"
          },
          {
            "name": "getError",
            "description": "Get the dropzone's error",
            "returns": "Promise<string|null>"
          },
          {
            "name": "getFiles",
            "description": "Get the dropzone's files",
            "returns": "Promise<File[]>"
          },
          {
            "name": "removeFile",
            "description": "Remove a file from the dropzone",
            "parameters": [
              {
                "name": "fileName",
                "type": "string"
              }
            ],
            "returns": "Promise<void>"
          }
        ],
        "componentName": "ModusFileDropzone"
      },
      "ModusIcon": {
        "description": "Icon component for displaying various icons",
        "properties": [
          {
            "name": "color",
            "type": "string",
            "description": "The color of the Icon",
            "default": "undefined"
          },
          {
            "name": "name",
            "type": "ModusIconName",
            "description": "The name of the icon",
            "default": "undefined"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of the Icon",
            "default": "16"
          }
        ],
        "events": [
          {
            "name": "iconClick",
            "description": "Fires when the icon is clicked",
            "emits": "void"
          }
        ],
        "componentName": "ModusIcon"
      },
      "ModusListItem": {
        "description": "List item component for displaying individual items within a list",
        "properties": [
          {
            "name": "borderless",
            "type": "boolean",
            "description": "Whether the list item has a border or not",
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Disables the list item",
            "default": "undefined"
          },
          {
            "name": "iconColor",
            "type": "string",
            "description": "Change color of left icon",
            "default": "undefined"
          },
          {
            "name": "leftIcon",
            "type": "string",
            "description": "Takes the icon name and shows the icon aligned to the left of the list item",
            "default": "undefined"
          },
          {
            "name": "selected",
            "type": "boolean",
            "description": "The selected state of the list item",
            "default": "undefined"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of list item",
            "options": ["condensed", "large", "standard"],
            "default": "standard"
          },
          {
            "name": "subText",
            "type": "string",
            "description": "Whether to show Subtext below the Slot content or not",
            "default": "undefined"
          },
          {
            "name": "type",
            "type": "string",
            "description": "The type of list item",
            "default": "standard"
          },
          {
            "name": "wrapSubText",
            "type": "boolean",
            "description": "Whether to wrap the sub text",
            "default": "true"
          }
        ],
        "events": [
          {
            "name": "itemClick",
            "description": "An event that fires on list item click",
            "emits": "any"
          }
        ],
        "methods": [
          {
            "name": "focusItem",
            "description": "Focus the list item",
            "returns": "Promise<void>"
          }
        ],
        "componentName": "ModusListItem"
      },
      "ModusList": {
        "description": "List container component for organizing list items",
        "componentName": "ModusList"
      },
      "ModusModal": {
        "description": "Modal dialog component for displaying content in an overlay",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The modal's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "backdrop",
            "type": "string",
            "description": "The modal's backdrop. Specify 'static' for a backdrop that doesn't close the modal when clicked outside the modal content",
            "options": ["static", "default"],
            "default": "default"
          },
          {
            "name": "fullscreen",
            "type": "boolean",
            "description": "The modal's full screen view",
            "default": "false"
          },
          {
            "name": "headerText",
            "type": "string",
            "description": "The modal's primary button text",
            "default": "undefined"
          },
          {
            "name": "primaryButtonAriaLabel",
            "type": "string",
            "description": "The modal's primary button ariaLabel",
            "default": "undefined"
          },
          {
            "name": "primaryButtonDisabled",
            "type": "boolean",
            "description": "Disable primary button",
            "default": "undefined"
          },
          {
            "name": "primaryButtonText",
            "type": "string",
            "description": "The modal's primary button text",
            "default": "undefined"
          },
          {
            "name": "secondaryButtonAriaLabel",
            "type": "string",
            "description": "The modal's secondary button ariaLabel",
            "default": "undefined"
          },
          {
            "name": "secondaryButtonDisabled",
            "type": "boolean",
            "description": "Disable secondary button",
            "default": "undefined"
          },
          {
            "name": "secondaryButtonText",
            "type": "string",
            "description": "The modal's secondary button text",
            "default": "undefined"
          },
          {
            "name": "showFullscreenToggle",
            "type": "boolean",
            "description": "Show full screen toggle",
            "default": "false"
          },
          {
            "name": "zIndex",
            "type": "string",
            "description": "The modal's z-index",
            "default": "1"
          }
        ],
        "events": [
          {
            "name": "closed",
            "description": "An event that fires on modal close",
            "emits": "any"
          },
          {
            "name": "opened",
            "description": "An event that fires on modal open",
            "emits": "any"
          },
          {
            "name": "primaryButtonClick",
            "description": "An event that fires on primary button click",
            "emits": "any"
          },
          {
            "name": "secondaryButtonClick",
            "description": "An event that fires on secondary button click",
            "emits": "any"
          }
        ],
        "methods": [
          {
            "name": "close",
            "description": "Closes the Modal",
            "returns": "Promise<void>"
          },
          {
            "name": "open",
            "description": "Opens the Modal",
            "returns": "Promise<void>"
          }
        ],
        "slots": [
          {
            "name": "footerContent",
            "description": "Slot for a custom footer content"
          }
        ],
        "componentName": "ModusModal"
      },
      "ModusNavbar": {
        "description": "Navigation bar component for application-wide navigation and controls",
        "interfaces": [
          {
            "name": "ModusNavbarApp",
            "properties": [
              {
                "name": "description",
                "type": "string",
                "description": "Description of the app",
                "optional": true
              },
              {
                "name": "logoUrl",
                "type": "string",
                "description": "URL of the app logo",
                "required": true
              },
              {
                "name": "name",
                "type": "string",
                "description": "Name of the app",
                "required": true
              },
              {
                "name": "url",
                "type": "string",
                "description": "URL of the app",
                "required": true
              },
              {
                "name": "category",
                "type": "string",
                "description": "Category of the app",
                "optional": true
              },
              {
                "name": "showCategory",
                "type": "boolean",
                "description": "Whether to show the app category",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusNavbarProfileMenuLink",
            "properties": [
              {
                "name": "display",
                "type": "string",
                "description": "Display text for the link",
                "required": true
              },
              {
                "name": "id",
                "type": "string",
                "description": "Unique identifier for the link",
                "required": true
              },
              {
                "name": "icon",
                "type": "string",
                "description": "Icon for the link",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusNavbarLogo",
            "properties": [
              {
                "name": "alt",
                "type": "string",
                "description": "Alt text for the logo",
                "optional": true
              },
              {
                "name": "url",
                "type": "string",
                "description": "URL of the logo image",
                "required": true
              },
              {
                "name": "height",
                "type": "string",
                "description": "Height of the logo",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusNavbarLogoOptions",
            "properties": [
              {
                "name": "primary",
                "type": "ModusNavbarLogo",
                "description": "Primary logo configuration",
                "optional": true
              },
              {
                "name": "secondary",
                "type": "ModusNavbarLogo",
                "description": "Secondary logo configuration",
                "optional": true
              },
              {
                "name": "clickable",
                "type": "boolean",
                "description": "Whether the logo is clickable",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusNavbarTooltip",
            "properties": [
              {
                "name": "text",
                "type": "string",
                "description": "Tooltip text",
                "required": true
              },
              {
                "name": "ariaLabel",
                "type": "string",
                "description": "Aria label for the tooltip",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusProfileMenuOptions",
            "properties": [
              {
                "name": "avatarUrl",
                "type": "string",
                "description": "URL of the profile avatar",
                "optional": true
              },
              {
                "name": "email",
                "type": "string",
                "description": "User's email",
                "optional": true
              },
              {
                "name": "initials",
                "type": "string",
                "description": "User's initials",
                "optional": true
              },
              {
                "name": "signOutText",
                "type": "string",
                "description": "Text for sign out button",
                "optional": true
              },
              {
                "name": "links",
                "type": "ModusNavbarProfileMenuLink[]",
                "description": "Profile menu links",
                "optional": true
              },
              {
                "name": "username",
                "type": "string",
                "description": "Username to display",
                "required": true
              },
              {
                "name": "tooltip",
                "type": "ModusNavbarTooltip",
                "description": "Tooltip configuration",
                "required": true
              }
            ]
          },
          {
            "name": "ModusNavbarButton",
            "properties": [
              {
                "name": "id",
                "type": "string",
                "description": "Button identifier",
                "required": true
              },
              {
                "name": "icon",
                "type": "string",
                "description": "Button icon",
                "required": true
              },
              {
                "name": "orderIndex",
                "type": "number",
                "description": "Order index for button placement",
                "required": true
              },
              {
                "name": "hideMenu",
                "type": "boolean",
                "description": "Whether to hide the menu",
                "optional": true
              },
              {
                "name": "tooltip",
                "type": "ModusNavbarTooltip",
                "description": "Button tooltip",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusNavbarDropdownItem",
            "properties": [
              {
                "name": "text",
                "type": "string",
                "description": "Display text for the dropdown item",
                "required": true
              },
              {
                "name": "value",
                "type": "string",
                "description": "Value of the dropdown item",
                "required": true
              }
            ]
          },
          {
            "name": "ModusNavbarDropdownOptions",
            "properties": [
              {
                "name": "ariaLabel",
                "type": "string",
                "description": "Aria label for the dropdown",
                "required": true
              },
              {
                "name": "items",
                "type": "ModusNavbarDropdownItem[]",
                "description": "Items in the dropdown",
                "required": true
              }
            ]
          }
        ],
        "properties": [
          {
            "name": "apps",
            "type": "ModusNavbarApp[]",
            "description": "The apps to render in the apps menu",
            "default": "undefined"
          },
          {
            "name": "navAriaLabel",
            "type": "string",
            "description": "The navbar's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "buttons",
            "type": "ModusNavbarButton[]",
            "description": "The buttons to render in the Navbar",
            "default": "undefined"
          },
          {
            "name": "notificationCount",
            "type": "number",
            "description": "To add the counter value to the notification icon",
            "default": "undefined"
          },
          {
            "name": "enableSearchOverlay",
            "type": "boolean",
            "description": "Whether to show search overlay or not",
            "default": "undefined"
          },
          {
            "name": "helpTooltip",
            "type": "ModusNavbarTooltip",
            "description": "Help tooltip",
            "default": "undefined"
          },
          {
            "name": "helpUrl",
            "type": "string",
            "description": "Help URL",
            "default": "undefined"
          },
          {
            "name": "logoOptions",
            "type": "ModusNavbarLogoOptions",
            "description": "Set the primary logo to display when the screen size is greater than 576 pixels, and the secondary logo to display when the screen size is less than or equal to 576 pixels",
            "default": "undefined"
          },
          {
            "name": "dropdownOptions",
            "type": "ModusNavbarDropdownOptions",
            "description": "Renders a modus dropdown in the Navbar",
            "default": "undefined"
          },
          {
            "name": "selectedDropdownItem",
            "type": "ModusNavbarDropdownItem",
            "description": "The selected dropdown item",
            "default": "undefined"
          },
          {
            "name": "profileMenuOptions",
            "type": "ModusProfileMenuOptions",
            "description": "Profile menu options",
            "default": "undefined",
            "required": true
          },
          {
            "name": "reverse",
            "type": "boolean",
            "description": "Whether to display the navbar items in reverse order",
            "default": "undefined"
          },
          {
            "name": "searchTooltip",
            "type": "ModusNavbarTooltip",
            "description": "Search tooltip",
            "default": "undefined"
          },
          {
            "name": "showAppsMenu",
            "type": "boolean",
            "description": "Whether to show the apps menu",
            "default": "undefined"
          },
          {
            "name": "showHelp",
            "type": "boolean",
            "description": "Whether to show help",
            "default": "undefined"
          },
          {
            "name": "showMainMenu",
            "type": "boolean",
            "description": "Whether to show the main menu",
            "default": "undefined"
          },
          {
            "name": "showNotifications",
            "type": "boolean",
            "description": "Whether to show notifications",
            "default": "undefined"
          },
          {
            "name": "showPendoPlaceholder",
            "type": "boolean",
            "description": "Whether to show the placeholder for Pendo",
            "default": "undefined"
          },
          {
            "name": "showProfile",
            "type": "boolean",
            "description": "Whether to show the profile",
            "default": "true"
          },
          {
            "name": "showSearch",
            "type": "boolean",
            "description": "Whether to show search",
            "default": "undefined"
          },
          {
            "name": "showShadow",
            "type": "boolean",
            "description": "Whether to show a shadow under the navbar",
            "default": "undefined"
          },
          {
            "name": "variant",
            "type": "string",
            "description": "Color variants for NavBar",
            "options": ["blue", "default"],
            "default": "default"
          }
        ],
        "events": [
          {
            "name": "appsMenuAppOpen",
            "description": "An event that fires when an apps menu app opens",
            "emits": "ModusNavbarApp"
          },
          {
            "name": "appsMenuOpen",
            "description": "An event that fires when the apps menu opens",
            "emits": "void"
          },
          {
            "name": "buttonClick",
            "description": "An event that fires when a button in the custom button list is clicked",
            "emits": "string"
          },
          {
            "name": "dropdownItemSelect",
            "description": "An event that fires when a dropdown item is selected",
            "emits": "ModusNavbarDropdownItem"
          },
          {
            "name": "helpOpen",
            "description": "An event that fires when the help link opens",
            "emits": "void"
          },
          {
            "name": "mainMenuClick",
            "description": "An event that fires on main menu click",
            "emits": "KeyboardEvent | MouseEvent"
          },
          {
            "name": "notificationsMenuOpen",
            "description": "An event that fires when the notifications menu opens",
            "emits": "void"
          },
          {
            "name": "productLogoClick",
            "description": "An event that fires on product logo click",
            "emits": "MouseEvent"
          },
          {
            "name": "profileMenuLinkClick",
            "description": "An event that fires on profile menu link click",
            "emits": "string"
          },
          {
            "name": "profileMenuOpen",
            "description": "An event that fires when the profile menu opens",
            "emits": "void"
          },
          {
            "name": "profileMenuSignOutClick",
            "description": "An event that fires on profile menu sign out click",
            "emits": "KeyboardEvent | MouseEvent"
          },
          {
            "name": "searchChange",
            "description": "An event that fires on search value change",
            "emits": "string"
          },
          {
            "name": "searchMenuClick",
            "description": "An event that fires on search button click",
            "emits": "void"
          }
        ],
        "componentName": "ModusNavbar"
      },
      "ModusPagination": {
        "description": "Pagination component for navigating through multiple pages of content",
        "properties": [
          {
            "name": "activePage",
            "type": "number",
            "description": "The pagination's active page",
            "default": "1"
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The pagination's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "maxPage",
            "type": "number",
            "description": "The pagination's maximum page",
            "default": "undefined"
          },
          {
            "name": "minPage",
            "type": "number",
            "description": "The pagination's minimum page",
            "default": "undefined"
          },
          {
            "name": "nextPageButtonText",
            "type": "string",
            "description": "The previous page button text. If not set, an icon control will be used",
            "default": "undefined"
          },
          {
            "name": "prevPageButtonText",
            "type": "string",
            "description": "The next page button text. If not set, an icon control will be used",
            "default": "undefined"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The pagination's size",
            "options": ["large", "medium", "small"],
            "default": "medium"
          }
        ],
        "events": [
          {
            "name": "pageChange",
            "description": "Fires on page change",
            "emits": "number"
          }
        ],
        "componentName": "ModusPagination"
      },
      "ModusSentimentScale": {
        "description": "Sentiment scale component for collecting user feedback through emoji or thumb icons",
        "interfaces": [
          {
            "name": "SMILEY_ICONS",
            "type": "string",
            "options": [
              "smiley-satisfied",
              "smiley-dissatisfied",
              "smiley-somewhat-dissatisfied",
              "smiley-neutral",
              "smiley-somewhat-satisfied"
            ]
          },
          {
            "name": "THUMB_ICONS",
            "type": "string",
            "options": [
              "thumbs-up",
              "thumbs-down"
            ]
          }
        ],
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The button's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "type",
            "type": "string",
            "description": "The type of icons to be displayed",
            "options": ["smileys", "thumbs"],
            "required": true
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the sentiment scale is disabled",
            "default": "false"
          }
        ],
        "events": [
          {
            "name": "sentimentSelection",
            "description": "Fires when a sentiment is selected",
            "emits": "string"
          }
        ],
        "componentName": "ModusSentimentScale"
      },
      "ModusSideNavigation": {
        "description": "Side navigation component for application navigation with collapsible panel",
        "interfaces": [
          {
            "name": "ModusHeaderNavigationItemInfo",
            "properties": [
              {
                "name": "isEnabled",
                "type": "boolean",
                "description": "Whether header navigation is enabled"
              },
              {
                "name": "items",
                "type": "string[]",
                "description": "List of items in the header navigation"
              }
            ]
          }
        ],
        "properties": [
          {
            "name": "collapseOnClickOutside",
            "type": "boolean",
            "description": "To choose whether to collapse the panel when clicked outside",
            "default": "true"
          },
          {
            "name": "data",
            "type": "ModusSideNavigationItemInfo[]",
            "description": "Data property to create the items",
            "default": "undefined"
          },
          {
            "name": "expanded",
            "type": "boolean",
            "description": "The expanded state of side navigation panel and items",
            "default": "false"
          },
          {
            "name": "maxWidth",
            "type": "string",
            "description": "Maximum width of the side navigation panel in an expanded state",
            "default": "256px"
          },
          {
            "name": "mode",
            "type": "string",
            "description": "Mode to make side navigation either overlay or push the content for the selector specified in targetContent",
            "options": ["overlay", "push"],
            "default": "overlay"
          },
          {
            "name": "targetContent",
            "type": "string",
            "description": "Specify the selector for the page's content for which paddings and margins will be set by side navigation based on the mode",
            "default": "undefined"
          }
        ],
        "events": [
          {
            "name": "sideNavExpand",
            "description": "An event that fires on side navigation panel collapse & expand",
            "emits": "boolean"
          }
        ],
        "componentName": "ModusSideNavigation"
      },
      "ModusSideNavigationItem": {
        "description": "Individual item component within the side navigation",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "description": "Unique identifier for a side navigation panel item",
            "required": true
          },
          {
            "name": "disableSelection",
            "type": "boolean",
            "description": "Disables item selection",
            "default": "false"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "The disabled state of side navigation panel item",
            "default": "false"
          },
          {
            "name": "expanded",
            "type": "boolean",
            "description": "The expanded state of side navigation panel item",
            "default": "false"
          },
          {
            "name": "label",
            "type": "string",
            "description": "Label for the item and the tooltip message",
            "default": "undefined"
          },
          {
            "name": "menuIcon",
            "type": "string",
            "description": "A built-in menu icon string or a image url",
            "default": "undefined"
          },
          {
            "name": "selected",
            "type": "boolean",
            "description": "The selected state of side navigation panel item",
            "default": "false"
          },
          {
            "name": "showExpandIcon",
            "type": "boolean",
            "description": "Shows the expand icon",
            "default": "false"
          },
          {
            "name": "isHeader",
            "type": "ModusHeaderNavigationItemInfo",
            "description": "To enable the header dropdown feature of side navigation panel",
            "default": "{ enabled: false, items: [] }"
          }
        ],
        "events": [
          {
            "name": "sideNavItemClicked",
            "description": "An event that fires when mouse click or Enter key press on an item",
            "emits": "{ id: string; selected: boolean; }"
          },
          {
            "name": "sideNavItemFocus",
            "description": "An event that fires when an item is in focus",
            "emits": "{ id: string; }"
          },
          {
            "name": "sideNavItemHeaderClicked",
            "description": "An event that fires when an item in header dropdown item is selected",
            "emits": "{ id: string; selected: boolean; }"
          }
        ],
        "componentName": "ModusSideNavigationItem"
      },
      "ModusSlider": {
        "description": "Slider component for selecting numeric values within a range",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The slider's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the slider is disabled",
            "default": "false"
          },
          {
            "name": "label",
            "type": "string",
            "description": "The slider's label",
            "default": "undefined"
          },
          {
            "name": "maxValue",
            "type": "number",
            "description": "The slider's maximum value",
            "default": "undefined"
          },
          {
            "name": "minValue",
            "type": "number",
            "description": "The slider's minimum value",
            "default": "undefined"
          },
          {
            "name": "value",
            "type": "number",
            "description": "The slider's value",
            "default": "undefined"
          }
        ],
        "events": [
          {
            "name": "valueChange",
            "description": "Fires on value change",
            "emits": "number"
          },
          {
            "name": "valueInput",
            "description": "Fires on value input",
            "emits": "number"
          }
        ],
        "componentName": "ModusSlider"
      },
      "ModusSpinner": {
        "description": "Spinner component for indicating loading or processing states",
        "properties": [
          {
            "name": "color",
            "type": "string",
            "description": "The color of the spinner. It can be a custom color or one of the variants - primary, secondary, tertiary",
            "default": "primary"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of the spinner",
            "default": "2rem"
          }
        ],
        "componentName": "ModusSpinner"
      },
      "ModusSwitch": {
        "description": "Switch component for toggling between two states",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The switch's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "checked",
            "type": "boolean",
            "description": "Whether the switch is checked",
            "default": "undefined"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the switch is disabled",
            "default": "undefined"
          },
          {
            "name": "label",
            "type": "string",
            "description": "The switch label",
            "default": "undefined"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The size of the radiobutton",
            "options": ["medium", "small"],
            "default": "medium"
          }
        ],
        "events": [
          {
            "name": "switchClick",
            "description": "Fires on switch click",
            "emits": "boolean"
          }
        ],
        "componentName": "ModusSwitch"
      },
      "ModusTabs":{
        "description": "Tabs component for organizing content into multiple tabbed sections",
        "properties": [
          {
            "name": "tabs",
            "type": "any",
            "description": "The tabs' tabs",
            "default": "undefined",
            "required": true
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The tabs' ariaLabel",
            "default": "undefined"
          },
          {
            "name": "size",
            "type": "string",
            "description": "The tabs' size",
            "options": ["medium", "small"],
            "default": "medium"
          },
          {
            "name": "full-width",
            "type": "boolean",
            "description": "The tabs' width",
            "default": "false"
          }
        ],
        "events": [
          {
            "name": "tabChange",
            "description": "Fires on tab change",
            "emits": "The current tab"
          }
        ],
        "componentName": "ModusTabs"
      },
      "ModusTable": {
        "description": "Data table component with advanced features including sorting, pagination, filtering, and inline editing",
        "interfaces": [
          {
            "name": "ModusTableRowData",
            "type": "unknown | object | any[]"
          },
          {
            "name": "ModusTableSortingState",
            "type": "ColumnSort[]",
            "properties": [
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "desc",
                "type": "boolean"
              }
            ]
          },
          {
            "name": "ModusTableColumnSort",
            "properties": [
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "desc",
                "type": "boolean"
              }
            ]
          },
          {
            "name": "ModusTableExpandedState",
            "type": "boolean | Record<string, boolean>"
          },
          {
            "name": "ModusTablePaginationState",
            "properties": [
              {
                "name": "pageIndex",
                "type": "number"
              },
              {
                "name": "pageSize",
                "type": "number"
              }
            ]
          },
          {
            "name": "ModusTableColumnSizingState",
            "type": "Record<string, number>"
          },
          {
            "name": "ModusTableColumnVisibilityState",
            "type": "Record<string, boolean>"
          },
          {
            "name": "ModusTableColumnOrderState",
            "type": "string[]"
          },
          {
            "name": "ModusTableCellData",
            "type": "CellContext<unknown, unknown>"
          },
          {
            "name": "ModusTableColumn",
            "properties": [
              {
                "name": "header",
                "type": "string",
                "required": true
              },
              {
                "name": "accessorKey",
                "type": "string",
                "required": true
              },
              {
                "name": "dataType",
                "type": "ModusTableColumnDataType",
                "required": true
              },
              {
                "name": "id",
                "type": "string",
                "optional": true
              },
              {
                "name": "cell",
                "type": "ColumnDefTemplate<ModusTableCellData>",
                "optional": true
              },
              {
                "name": "footer",
                "type": "string",
                "optional": true
              },
              {
                "name": "enableSorting",
                "type": "boolean",
                "optional": true
              },
              {
                "name": "enableResizing",
                "type": "boolean",
                "optional": true
              },
              {
                "name": "size",
                "type": "number",
                "optional": true
              },
              {
                "name": "minSize",
                "type": "number",
                "optional": true
              },
              {
                "name": "maxSize",
                "type": "number",
                "optional": true
              },
              {
                "name": "showTotal",
                "type": "boolean",
                "optional": true
              },
              {
                "name": "subRows",
                "type": "ModusTableColumn<TData, TValue>[]",
                "optional": true
              },
              {
                "name": "sortingFn",
                "type": "ModusTableSortingFunction<TData>",
                "optional": true
              },
              {
                "name": "cellEditable",
                "type": "boolean",
                "optional": true
              },
              {
                "name": "cellEditorType",
                "type": "ModusTableCellEditorType",
                "optional": true
              },
              {
                "name": "cellEditorArgs",
                "type": "ModusTableCellEditorArgs",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusTableDisplayOptions",
            "properties": [
              {
                "name": "borderless",
                "type": "boolean",
                "optional": true
              },
              {
                "name": "cellBorderless",
                "type": "boolean",
                "optional": true
              },
              {
                "name": "cellVerticalBorderless",
                "type": "boolean",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusTableToolbarOptions",
            "properties": [
              {
                "name": "columnsVisibility",
                "type": "ModusTableColumnsVisibilityOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "ModusTableCellLink",
            "properties": [
              {
                "name": "display",
                "type": "string",
                "required": true
              },
              {
                "name": "url",
                "type": "string",
                "required": true
              },
              {
                "name": "_type",
                "type": "typeof COLUMN_DEF_DATATYPE_LINK",
                "optional": true
              }
            ]
          }
        ],
        "properties": [
          {
            "name": "columnReorder",
            "type": "boolean",
            "description": "To allow column reordering",
            "default": "false"
          },
          {
            "name": "columnResize",
            "type": "boolean",
            "description": "To enable column resizing",
            "default": "false"
          },
          {
            "name": "columns",
            "type": "ModusTableColumn<unknown, unknown>[]",
            "description": "To display headers in the table",
            "required": true
          },
          {
            "name": "data",
            "type": "unknown[]",
            "description": "To display data in the table",
            "required": true
          },
          {
            "name": "defaultSort",
            "type": "ModusTableColumnSort",
            "description": "To control the default column to be used to sort the table",
            "default": "undefined"
          },
          {
            "name": "density",
            "type": "string",
            "description": "To control the density in the table. This is the row height",
            "options": ["relaxed", "comfortable", "compact"],
            "default": "relaxed"
          },
          {
            "name": "displayOptions",
            "type": "ModusTableDisplayOptions",
            "description": "To control display options of table",
            "default": "{ borderless: false, cellBorderless: false, cellVerticalBorderless: false }"
          },
          {
            "name": "fullWidth",
            "type": "boolean",
            "description": "To make the table full width",
            "default": "false"
          },
          {
            "name": "hover",
            "type": "boolean",
            "description": "To enable row hover in table",
            "default": "false"
          },
          {
            "name": "maxHeight",
            "type": "string",
            "description": "To display a vertical scrollbar when the height is exceeded",
            "default": "undefined"
          },
          {
            "name": "maxWidth",
            "type": "string",
            "description": "To display a horizontal scrollbar when the width is exceeded",
            "default": "undefined"
          },
          {
            "name": "pageSizeList",
            "type": "number[]",
            "description": "List of available page sizes",
            "default": "PAGINATION_DEFAULT_SIZES"
          },
          {
            "name": "pagination",
            "type": "boolean",
            "description": "To enable pagination",
            "default": "undefined"
          },
          {
            "name": "rowActions",
            "type": "ModusTableRowAction[]",
            "description": "Actions that can be performed on each row",
            "default": "[]"
          },
          {
            "name": "rowSelection",
            "type": "boolean",
            "description": "To display checkbox",
            "default": "false"
          },
          {
            "name": "rowsExpandable",
            "type": "boolean",
            "description": "To display expanded rows",
            "default": "false"
          },
          {
            "name": "showSortIconOnHover",
            "type": "boolean",
            "description": "To display sort icon on hover",
            "default": "false"
          },
          {
            "name": "sort",
            "type": "boolean",
            "description": "To sort data in table",
            "default": "false"
          },
          {
            "name": "summaryRow",
            "type": "boolean",
            "description": "To display summary row",
            "default": "false"
          },
          {
            "name": "toolbar",
            "type": "boolean",
            "description": "To display a toolbar for the table",
            "default": "false"
          },
          {
            "name": "wrapText",
            "type": "boolean",
            "description": "To wrap text that overflows the cell",
            "default": "false"
          }
        ],
        "events": [
          {
            "name": "cellLinkClick",
            "description": "Emits the link that was clicked",
            "emits": "ModusTableCellLink"
          },
          {
            "name": "cellValueChange",
            "description": "Emits the cell value that was edited",
            "emits": "ModusTableCellValueChange"
          },
          {
            "name": "columnOrderChange",
            "description": "Emits columns in the updated order",
            "emits": "string[]"
          },
          {
            "name": "columnSizingChange",
            "description": "Emits latest column size",
            "emits": "{ [x: string]: number; }"
          },
          {
            "name": "columnVisibilityChange",
            "description": "Emits visibility state of each column",
            "emits": "{ [x: string]: boolean; }"
          },
          {
            "name": "paginationChange",
            "description": "Emits selected page index and size",
            "emits": "PaginationState"
          },
          {
            "name": "rowActionClick",
            "description": "An event that fires when a row action is clicked",
            "emits": "ModusTableRowActionClick"
          },
          {
            "name": "rowExpanded",
            "description": "Emits expanded state of the columns",
            "emits": "boolean | { [x: string]: boolean; }"
          },
          {
            "name": "rowSelectionChange",
            "description": "Emits rows selected",
            "emits": "unknown"
          },
          {
            "name": "sortChange",
            "description": "Emits column sort order",
            "emits": "ColumnSort[]"
          },
          {
            "name": "cellInputValueChange",
            "description": "Emits the current cell input value on every keystroke",
            "emits": "ModusTableCellValueChange"
          }
        ],
        "slots": [
          {
            "name": "customFooter",
            "description": "Slot for custom footer"
          },
          {
            "name": "groupLeft",
            "description": "Slot for custom toolbar options added to the left"
          },
          {
            "name": "groupRight",
            "description": "Slot for custom toolbar options added to the right"
          }
        ],
        "methods": [
          {
            "name": "getColumnData",
            "description": "Gets data of a particular column",
            "parameters": [
              {
                "name": "accessorKey",
                "type": "string"
              }
            ],
            "returns": "Promise<unknown[]>"
          },
          {
            "name": "toggleColumnVisibility",
            "description": "Decides the Data table column visibility",
            "parameters": [
              {
                "name": "columnId",
                "type": "string"
              },
              {
                "name": "show",
                "type": "boolean"
              }
            ],
            "returns": "Promise<void>"
          },
          {
            "name": "getEditableCell",
            "description": "Handle the editability of a specific cell",
            "parameters": [
              {
                "name": "rowIndex",
                "type": "string"
              },
              {
                "name": "columnId",
                "type": "string"
              }
            ],
            "returns": "Promise<void>"
          }
        ],
        "componentName": "ModusTable"
      },
      "ModusToast": {
        "description": "Toast notification component for displaying temporary messages",
        "properties": [
          {
            "name": "ariaLabel",
            "type": "string",
            "description": "The toast's ariaLabel",
            "default": "undefined"
          },
          {
            "name": "delay",
            "type": "number",
            "description": "Time taken to dismiss the toast",
            "default": "15000"
          },
          {
            "name": "dismissible",
            "type": "boolean",
            "description": "Whether the toast is dismissible",
            "default": "false"
          },
          {
            "name": "retain-element",
            "type": "boolean",
            "description": "Whether to retain the toast's element in the DOM after it is dismissed",
            "default": "false"
          },
          {
            "name": "role",
            "type": "string",
            "description": "Role taken by the toast",
            "options": ["alert", "log", "marquee", "status", "timer"],
            "default": "status"
          },
          {
            "name": "show-icon",
            "type": "boolean",
            "description": "Whether to show the toast's icon",
            "default": "false"
          },
          {
            "name": "type",
            "type": "string",
            "description": "The toast's type",
            "options": ["danger", "primary", "secondary", "success"],
            "default": "primary"
          }
        ],
        "events": [
          {
            "name": "dismissClick",
            "description": "Fires on dismiss click",
            "emits": "void"
          }
        ],
        "componentName": "ModusToast"
      }
    }
  }
}